{
  "compilerOptions": {
    // Onde o TS guarda info incremental da build (aumenta velocidade)
    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.node.tsbuildinfo",

    // Versão alvo do JS gerado (ES2023: moderno, com últimas features)
    "target": "ES2023",

    // Bibliotecas que o TS vai usar para tipos (DOM + ES2023)
    "lib": ["DOM", "DOM.Iterable", "ES2023"],

    // Módulo usado, ideal pra bundlers modernos (Vite)
    "module": "ESNext",

    // Pula checagem de tipos em libs externas (aumenta velocidade)
    "skipLibCheck": true,

    // Resolucao de módulos para bundlers (Vite, Rollup)
    "moduleResolution": "bundler",

    // Permite importar arquivos TS com extensão explícita (import './file.ts')
    "allowImportingTsExtensions": true,

    // Mantém sintaxe dos módulos exatamente como no código
    "verbatimModuleSyntax": true,

    // Força detecção explícita dos módulos (evita erros silenciosos)
    "moduleDetection": "force",

    // Não gera arquivos JS, só checa tipos (Vite faz build)
    "noEmit": true,

    // Rigor nas verificações de tipos para código mais seguro
    "strict": true,

    // Evita variáveis e parâmetros não usados
    "noUnusedLocals": true,
    "noUnusedParameters": true,

    // Previne que casos em switch "caiam" sem break
    "noFallthroughCasesInSwitch": true,

    // Torna acesso a arrays e objetos mais seguro, evitando undefined
    "noUncheckedIndexedAccess": true,

    // Diferencia propriedades opcionais de obrigatórias com precisão
    "exactOptionalPropertyTypes": true,

    // Evita importações que causam efeitos colaterais inesperados
    "noUncheckedSideEffectImports": true,

    // Ajuda na interoperabilidade com módulos CommonJS
    "esModuleInterop": true,

    // Evita erros por diferença entre maiúsculas e minúsculas em nomes de arquivo
    "forceConsistentCasingInFileNames": true,

    // JSX moderno do React 17+ (não precisa importar React em cada arquivo)
    "jsx": "react-jsx"
  },

  // Referência para pasta de funções Netlify (project references)
  "references": [
    { "path": "./netlify/functions" }
  ],

  // Arquivos e pastas incluídos na checagem de tipos do TS
  "include": ["vite.config.ts", "src", "netlify/functions"]
}
